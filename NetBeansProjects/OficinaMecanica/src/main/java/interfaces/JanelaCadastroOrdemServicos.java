package interfaces;

import controle.ControladorCadastroOrdemServicos;
import entidade.Cliente;
import entidade.OrdemServico;
import entidade.Servico;
import entidade.OrdemServico.MetodoPagamento;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

public class JanelaCadastroOrdemServicos extends javax.swing.JFrame {

    ControladorCadastroOrdemServicos controlador;
    DefaultListModel modelo_lista_ordemservico;
    Cliente[] clientes_cadastrados;
    Servico[] servicos_cadastrados;

    public JanelaCadastroOrdemServicos(ControladorCadastroOrdemServicos controlador) {
        this.controlador = controlador;
        clientes_cadastrados = Cliente.getVisoes();
        servicos_cadastrados = Servico.getVisoes();
        initComponents();
        inicializarListaOrdemServicos();
        limparCampos(null);
    }

    private void inicializarListaOrdemServicos() {
        modelo_lista_ordemservico = (DefaultListModel) ordemservicosList.getModel();
        OrdemServico[] visoes = OrdemServico.getVisoes();
        for (OrdemServico visao : visoes) {
            System.out.println(visao.getMetodoPagamento());
            modelo_lista_ordemservico.addElement(visao);
        }
    }

    private OrdemServico obtemOrdemServicoInformada() {
        String sequencial_str = sequencialTextField.getText();
        int sequencial = 0;
        if (!sequencial_str.isEmpty()) {
            sequencial = Integer.parseInt(sequencial_str);
        }
        Cliente visao_cliente = (Cliente) clientes_cadastradosComboBox.getSelectedItem();
        if (visao_cliente == null) {
            return null;
        }
        Servico visao_servico = (Servico) servicos_cadastradosComboBox.getSelectedItem();
        if (visao_servico == null) {
            return null;
        }
        OrdemServico.MetodoPagamento metodo_pagamento = null;
        if (metodo_pagamentoComboBox.getSelectedItem() != null) {
            metodo_pagamento = (OrdemServico.MetodoPagamento) metodo_pagamentoComboBox.getSelectedItem();
        } else {
            return null;
        }
        OrdemServico.TarefasRealizadas tarefas_realizadas = null;
        if (tarefasRealizadasButtonGroup.getSelection() != null) {
            tarefas_realizadas = OrdemServico.TarefasRealizadas.values()[tarefasRealizadasButtonGroup.getSelection().getMnemonic()];
        }
        return new OrdemServico(sequencial, visao_cliente, visao_servico,tarefas_realizadas, metodo_pagamento);
    }

    private void selecionePreferenciaRadioButton(int indice_preferencia) {
        switch (indice_preferencia) {
            case 0:
                diagnosticoRadioButton.setSelected(true);
                break;
            case 1:
                reparoRadioButton.setSelected(true);
                break;
            case 2:
                manutencaoRadioButton.setSelected(true);
        }
    }
    
    private Servico getVisaoServicoSelecionado(OrdemServico ordemservico) {
        String chave_servico = ordemservico.getServico().getDescricao();
        for(Servico visao_servico : servicos_cadastrados){
            if(visao_servico.getDescricao().equals(chave_servico))
                return visao_servico;
        }
        return null;
    }
    
    private Cliente getVisaoClienteSelecionada(OrdemServico ordemservico){
        String chave_cliente = ordemservico.getCliente().getCpf();
        for(Cliente visao_cliente : clientes_cadastrados){
            if(visao_cliente.getCpf().equals(chave_cliente))
                return visao_cliente;
        }
        return null;
    }
    
    private void limparCampos() {
        sequencialTextField.setText("");
        clientes_cadastradosComboBox.setSelectedIndex(-1);
        servicos_cadastradosComboBox.setSelectedIndex(-1);
        metodo_pagamentoComboBox.setSelectedIndex(-1);
        tarefasRealizadasButtonGroup.clearSelection();
    }
    
    private void informarErro(String mensagem) {
        JOptionPane.showMessageDialog(this, mensagem, "ERRO", JOptionPane.ERROR_MESSAGE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tarefasRealizadasButtonGroup = new javax.swing.ButtonGroup();
        ordemservico_cadastradasLabel = new javax.swing.JLabel();
        ordem_servicoLabel = new javax.swing.JLabel();
        clientes_cadastradosLabel = new javax.swing.JLabel();
        servicos_cadastradosLabel = new javax.swing.JLabel();
        metodo_pagamentoLabel = new javax.swing.JLabel();
        tarefa_realizadaLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ordemservicosList = new javax.swing.JList();
        sequencialTextField = new javax.swing.JTextField();
        clientes_cadastradosComboBox = new javax.swing.JComboBox();
        servicos_cadastradosComboBox = new javax.swing.JComboBox();
        metodo_pagamentoComboBox = new javax.swing.JComboBox<>();
        diagnosticoRadioButton = new javax.swing.JRadioButton();
        reparoRadioButton = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        consultarButton = new javax.swing.JButton();
        alterarButton = new javax.swing.JButton();
        removerButton = new javax.swing.JButton();
        limparCampos = new javax.swing.JButton();
        inserirButton = new javax.swing.JButton();
        manutencaoRadioButton = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro Ordem de Servico");

        ordemservico_cadastradasLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ordemservico_cadastradasLabel.setText("Ordem Servico Cadastradas");

        ordem_servicoLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ordem_servicoLabel.setText("Ordem de Servico");

        clientes_cadastradosLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        clientes_cadastradosLabel.setText("Clientes Cadastrados");

        servicos_cadastradosLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        servicos_cadastradosLabel.setText("Servicos Cadastrados");

        metodo_pagamentoLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        metodo_pagamentoLabel.setText("Metodo de Pagamento");

        tarefa_realizadaLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tarefa_realizadaLabel.setText("Tarefa Realizada");

        ordemservicosList.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ordemservicosList.setModel(new DefaultListModel()
        );
        jScrollPane1.setViewportView(ordemservicosList);

        sequencialTextField.setEditable(false);
        sequencialTextField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        sequencialTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sequencialTextFieldActionPerformed(evt);
            }
        });

        clientes_cadastradosComboBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        clientes_cadastradosComboBox.setModel(new DefaultComboBoxModel(clientes_cadastrados));

        servicos_cadastradosComboBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        servicos_cadastradosComboBox.setModel(new DefaultComboBoxModel(servicos_cadastrados));

        metodo_pagamentoComboBox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        metodo_pagamentoComboBox.setModel(new DefaultComboBoxModel (MetodoPagamento.values()));

        tarefasRealizadasButtonGroup.add(diagnosticoRadioButton);
        diagnosticoRadioButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        diagnosticoRadioButton.setText("Diagnostico");
        diagnosticoRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diagnosticoRadioButtonActionPerformed(evt);
            }
        });

        tarefasRealizadasButtonGroup.add(reparoRadioButton);
        reparoRadioButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        reparoRadioButton.setMnemonic('\u0001');
        reparoRadioButton.setText("Reparo");

        consultarButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        consultarButton.setText("Consultar");
        consultarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultarOrdemServico(evt);
            }
        });

        alterarButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        alterarButton.setText("Alterar");
        alterarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alterarOrdemServico(evt);
            }
        });

        removerButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        removerButton.setText("Remover");
        removerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerOrdemServico(evt);
            }
        });

        limparCampos.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        limparCampos.setText("Limpar");
        limparCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparCampos(evt);
            }
        });

        inserirButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        inserirButton.setText("Inserir");
        inserirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inserirOrdemServico(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inserirButton)
                .addGap(18, 18, 18)
                .addComponent(consultarButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(alterarButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(removerButton)
                .addGap(18, 18, 18)
                .addComponent(limparCampos)
                .addGap(0, 83, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(consultarButton)
                    .addComponent(alterarButton)
                    .addComponent(removerButton)
                    .addComponent(limparCampos)
                    .addComponent(inserirButton))
                .addGap(0, 13, Short.MAX_VALUE))
        );

        tarefasRealizadasButtonGroup.add(manutencaoRadioButton);
        manutencaoRadioButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        manutencaoRadioButton.setMnemonic('\u0002');
        manutencaoRadioButton.setSelected(true);
        manutencaoRadioButton.setText("Manutencao");
        manutencaoRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manutencaoRadioButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ordemservico_cadastradasLabel)
                            .addComponent(ordem_servicoLabel)
                            .addComponent(clientes_cadastradosLabel)
                            .addComponent(servicos_cadastradosLabel)
                            .addComponent(metodo_pagamentoLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(diagnosticoRadioButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(reparoRadioButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(manutencaoRadioButton)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 670, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sequencialTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(metodo_pagamentoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(servicos_cadastradosComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 313, Short.MAX_VALUE)
                                        .addComponent(clientes_cadastradosComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(0, 102, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tarefa_realizadaLabel)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(168, 168, 168))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(ordemservico_cadastradasLabel)
                        .addGap(108, 108, 108))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ordem_servicoLabel)
                    .addComponent(sequencialTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clientes_cadastradosComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clientes_cadastradosLabel))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(servicos_cadastradosLabel)
                    .addComponent(servicos_cadastradosComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(metodo_pagamentoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(metodo_pagamentoLabel))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tarefa_realizadaLabel)
                    .addComponent(diagnosticoRadioButton)
                    .addComponent(reparoRadioButton)
                    .addComponent(manutencaoRadioButton))
                .addGap(74, 74, 74)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(170, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sequencialTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sequencialTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sequencialTextFieldActionPerformed

    private void consultarOrdemServico(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultarOrdemServico
        OrdemServico visao_ordemservico = (OrdemServico) ordemservicosList.getSelectedValue();
        OrdemServico ordemservico = null;
        String mensagem_erro = null;
        if (visao_ordemservico != null) {
            ordemservico = OrdemServico.buscarOrdemServico(visao_ordemservico.getSequencial());
            if (ordemservico == null) {
                mensagem_erro = "Ordem de servico não cadastrada";
            }
        } else {
            mensagem_erro = "Nenhuma ordem de servico selecionada";
        }
        if (mensagem_erro == null) {
            sequencialTextField.setText(ordemservico.getSequencial() + "");
            clientes_cadastradosComboBox.setSelectedItem(getVisaoClienteSelecionada(ordemservico));
            servicos_cadastradosComboBox.setSelectedItem(getVisaoServicoSelecionado(ordemservico));
            metodo_pagamentoComboBox.setSelectedItem(ordemservico.getMetodoPagamento());
            selecionePreferenciaRadioButton(ordemservico.getTarefasRealizadas().ordinal());
        } else {
            informarErro(mensagem_erro);
        }
    }//GEN-LAST:event_consultarOrdemServico

    private void alterarOrdemServico(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterarOrdemServico
        OrdemServico ordemservico = obtemOrdemServicoInformada();
        String mensagem_erro = null;
        if (ordemservico != null) {
            mensagem_erro = controlador.alterarOrdemServico(ordemservico);
        } else {
            mensagem_erro = "algum atributo da ordem de servico nao informado";
        }
        if (mensagem_erro != null) {
            informarErro(mensagem_erro);
        }
    }//GEN-LAST:event_alterarOrdemServico

    private void removerOrdemServico(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerOrdemServico
        OrdemServico visao = (OrdemServico) ordemservicosList.getSelectedValue();
        String mensagem_erro = null;
        if (visao != null) {
            mensagem_erro = controlador.removerOrdemServico(visao.getSequencial());
        } else {
            mensagem_erro = "Nenhuma ordem de servico selecionado";
        }
        if (mensagem_erro == null) {
            modelo_lista_ordemservico.removeElement(visao);
        } else {
            informarErro(mensagem_erro);
        }
    }//GEN-LAST:event_removerOrdemServico

    private void limparCampos(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparCampos
        limparCampos();
    }//GEN-LAST:event_limparCampos

    private void inserirOrdemServico(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inserirOrdemServico
        OrdemServico ordemservico = obtemOrdemServicoInformada();
        String mensagem_erro = null;
        if (ordemservico != null) {
            mensagem_erro = controlador.inserirOrdemServico(ordemservico);
        } else {
            mensagem_erro = "Algum atributo da ordem de servico nao foi informado";
        }
        if (mensagem_erro == null) {
            int sequencial = OrdemServico.ultimoSequencial();
            ordemservico.setSequencial(sequencial);
            modelo_lista_ordemservico.addElement(ordemservico.getVisao());
            ordemservicosList.setSelectedIndex(modelo_lista_ordemservico.size() - 1);
            sequencialTextField.setText("" + sequencial);
        } else {
            informarErro(mensagem_erro);
        }
    }//GEN-LAST:event_inserirOrdemServico

    private void diagnosticoRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diagnosticoRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_diagnosticoRadioButtonActionPerformed

    private void manutencaoRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manutencaoRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_manutencaoRadioButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JanelaCadastroOrdemServicos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JanelaCadastroOrdemServicos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JanelaCadastroOrdemServicos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JanelaCadastroOrdemServicos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new JanelaCadastroAvaliacoes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton alterarButton;
    private javax.swing.JComboBox clientes_cadastradosComboBox;
    private javax.swing.JLabel clientes_cadastradosLabel;
    private javax.swing.JButton consultarButton;
    private javax.swing.JRadioButton diagnosticoRadioButton;
    private javax.swing.JButton inserirButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton limparCampos;
    private javax.swing.JRadioButton manutencaoRadioButton;
    private javax.swing.JComboBox<String> metodo_pagamentoComboBox;
    private javax.swing.JLabel metodo_pagamentoLabel;
    private javax.swing.JLabel ordem_servicoLabel;
    private javax.swing.JLabel ordemservico_cadastradasLabel;
    private javax.swing.JList ordemservicosList;
    private javax.swing.JButton removerButton;
    private javax.swing.JRadioButton reparoRadioButton;
    private javax.swing.JTextField sequencialTextField;
    private javax.swing.JComboBox servicos_cadastradosComboBox;
    private javax.swing.JLabel servicos_cadastradosLabel;
    private javax.swing.JLabel tarefa_realizadaLabel;
    private javax.swing.ButtonGroup tarefasRealizadasButtonGroup;
    // End of variables declaration//GEN-END:variables
}
