/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import controle.controladorCadastroFilme;
import entidade.Filme;
import entidade.Filme.Genero;
import entidade.FilmeCompanhiaCinematografica;
import entidade.FilmeProvedoraStreaming;
import entidade.FilmeProvedoraStreaming.Producao;
import entidade.FilmeProvedoraStreaming.ProvedoraStreaming;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author felip
 */
public class JanelaCadastroFilmes extends javax.swing.JFrame {

    controladorCadastroFilme controlador;
    DefaultListModel modelo_lista_filmes;
    PainelFilmesCompanhiaCinematografica filme_companhia_cinematograficaPainel;
    PainelFilmesProvedoraStreaming filme_provedora_streamingPainel;

    public JanelaCadastroFilmes(controladorCadastroFilme controlador) {
        this.controlador = controlador;
        initComponents();
        filme_companhia_cinematograficaPainel = new PainelFilmesCompanhiaCinematografica();
        filme_provedora_streamingPainel = new PainelFilmesProvedoraStreaming();
        especializacao_filme_TabbedPane.addTab("Filme de Companhia Cinematografica",
                filme_companhia_cinematograficaPainel);
        especializacao_filme_TabbedPane.addTab("Filme de Provedora de Streaming",
                filme_provedora_streamingPainel);
        inicializarListaFilmes();
        LimparCampos();
    }

    private void inicializarListaFilmes() {
        modelo_lista_filmes = (DefaultListModel) filmes_cadastradosList.getModel();
        Filme[] visoes = Filme.getVisoes();
        for (Filme visao : visoes) {
            modelo_lista_filmes.addElement(visao);
        }
    }

    private void LimparCampos() {
        anoTextField.setText("");
        tituloTextField.setText("");
        sequencialTextField.setText("");
        generoComboBox.setSelectedIndex(-1);
        filme_companhia_cinematograficaPainel.limparCampos();
        filme_provedora_streamingPainel.limparCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        generoComboBox = new javax.swing.JComboBox<>();
        anoTextField = new javax.swing.JTextField();
        tituloTextField = new javax.swing.JTextField();
        sequencialTextField = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        inserirButton = new javax.swing.JButton();
        consultarButton = new javax.swing.JButton();
        alterarButton = new javax.swing.JButton();
        removerButton = new javax.swing.JButton();
        limparButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        filmes_cadastradosList = new javax.swing.JList();
        especializacao_filme_TabbedPane = new javax.swing.JTabbedPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Ano");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Gênero");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Título");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Identificador sequencial");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Filmes cadastrados");

        generoComboBox.setModel(new DefaultComboBoxModel (Genero.values())
        );

        tituloTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tituloTextFieldActionPerformed(evt);
            }
        });

        sequencialTextField.setEditable(false);

        inserirButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        inserirButton.setText("Inserir");
        inserirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inserirButtonActionPerformed(evt);
            }
        });

        consultarButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        consultarButton.setText("Consultar");
        consultarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultarButtonActionPerformed(evt);
            }
        });

        alterarButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        alterarButton.setText("Alterar");
        alterarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alterarButtonActionPerformed(evt);
            }
        });

        removerButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        removerButton.setText("Remover");
        removerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerButtonActionPerformed(evt);
            }
        });

        limparButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        limparButton.setText("Limpar");
        limparButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(inserirButton)
                .addGap(18, 18, 18)
                .addComponent(consultarButton)
                .addGap(18, 18, 18)
                .addComponent(alterarButton)
                .addGap(18, 18, 18)
                .addComponent(removerButton)
                .addGap(18, 18, 18)
                .addComponent(limparButton)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inserirButton)
                    .addComponent(consultarButton)
                    .addComponent(alterarButton)
                    .addComponent(removerButton)
                    .addComponent(limparButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        filmes_cadastradosList.setModel(new DefaultListModel ( )
        );
        jScrollPane1.setViewportView(filmes_cadastradosList);

        especializacao_filme_TabbedPane.setPreferredSize(new java.awt.Dimension(600, 200));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(sequencialTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addGap(144, 144, 144)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tituloTextField)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(generoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(anoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(especializacao_filme_TabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel5))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(sequencialTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tituloTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(generoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(anoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(especializacao_filme_TabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tituloTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tituloTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tituloTextFieldActionPerformed

    private void inserirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inserirButtonActionPerformed
        Filme filme = obterFilmeInformado();
        String mensagem_erro = null;
        if (filme != null) {
            mensagem_erro = controlador.inserirFilme(filme);
        } else {
            mensagem_erro = "Algum atributo do amigo não foi informado";
        }
        if (mensagem_erro == null) {
            int sequencial = Filme.ultimoSequencial();
            filme.setSequencial(sequencial);
            modelo_lista_filmes.addElement(filme.getVisao());
            filmes_cadastradosList.setSelectedIndex(modelo_lista_filmes.size() - 1);
            sequencialTextField.setText("" + sequencial);
        } else {
            informarErro(mensagem_erro);
        }
    }//GEN-LAST:event_inserirButtonActionPerformed

    private void limparButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparButtonActionPerformed
        LimparCampos();
    }//GEN-LAST:event_limparButtonActionPerformed

    private void consultarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultarButtonActionPerformed
        Filme visao = (Filme) filmes_cadastradosList.getSelectedValue();
        Filme filme = null;
        String mensagem_erro = null;
        if (visao != null) {
            filme = Filme.buscarFilme(visao.getSequencial());
            if (filme == null) {
                mensagem_erro = "Filme não cadastrado";
            }
        } else {
            mensagem_erro = "Nenhum filme selecionado";
        }
        if (mensagem_erro == null) {
            sequencialTextField.setText(filme.getSequencial() + "");
            tituloTextField.setText(filme.getTitulo());
            generoComboBox.setSelectedItem(filme.getGenero());
            anoTextField.setText(filme.getAno() + "");
        } else {
            informarErro(mensagem_erro);
        }
        if (filme instanceof FilmeCompanhiaCinematografica) {
            especializacao_filme_TabbedPane.setSelectedIndex(0);
            FilmeCompanhiaCinematografica filme_companhia_cinematografica = (FilmeCompanhiaCinematografica) filme;
            filme_companhia_cinematograficaPainel.setOscarMelhorFilme(filme_companhia_cinematografica.isOscarMelhorFilme());
            filme_companhia_cinematograficaPainel.setOscarMelhorDiretor(filme_companhia_cinematografica.getOscarMelhorDiretor());
            filme_companhia_cinematograficaPainel.setOscarMelhorAtor(filme_companhia_cinematografica.getOscarMelhorAtor());
            filme_companhia_cinematograficaPainel.setOscarMelhorAtriz(filme_companhia_cinematografica.getOscarMelhorAtriz());
        } else if (filme instanceof FilmeProvedoraStreaming) {
            especializacao_filme_TabbedPane.setSelectedIndex(1);
            FilmeProvedoraStreaming filme_provedora_streaming = (FilmeProvedoraStreaming) filme;
            filme_provedora_streamingPainel.setSelectedProvedoraStreaming(filme_provedora_streaming.getProvedora());
            filme_provedora_streamingPainel.setSelectedProducao(filme_provedora_streaming.getProducao().ordinal());
            filme_provedora_streamingPainel.setTotalEpisodios(filme_provedora_streaming.getTotalEpisodios());
        }
    }//GEN-LAST:event_consultarButtonActionPerformed

    private void alterarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterarButtonActionPerformed
        Filme filme = obterFilmeInformado();
        String mensagem_erro = null;
        if (filme != null) {
            mensagem_erro = controlador.alterarFilme(filme);
        } else {
            mensagem_erro = "Algum atributo do filme nao foi informado";
        }
        if (mensagem_erro == null) {
            Filme visão = (Filme) filmes_cadastradosList.getSelectedValue();
            if (visão != null) {
                visão.setTitulo(filme.getTitulo());
                filmes_cadastradosList.updateUI();
            }
        } else {
            informarErro(mensagem_erro);
        }
    }//GEN-LAST:event_alterarButtonActionPerformed

    private void removerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerButtonActionPerformed
        Filme visao = (Filme) filmes_cadastradosList.getSelectedValue();
        String mensagem_erro = null;
        if (visao != null) {
            mensagem_erro = controlador.removerFilme(visao.getSequencial());
        } else {
            mensagem_erro = "Nenhum filme selecionado";
        }
        if (mensagem_erro == null) {
            modelo_lista_filmes.removeElement(visao);
        } else {
            informarErro(mensagem_erro);
        }
    }//GEN-LAST:event_removerButtonActionPerformed

    private Filme obterFilmeInformado() {

        String sequencial_str = sequencialTextField.getText();
        int sequencial = 0;
        if (!sequencial_str.isEmpty()) {
            sequencial = Integer.parseInt(sequencial_str);
        }
        String titulo = tituloTextField.getText();
        if (titulo.isEmpty()) {
            return null;
        }
        Genero genero = null;
        if (generoComboBox.getSelectedItem() != null) {
            genero = (Genero) generoComboBox.getSelectedItem();
        } else {
            return null;
        }
        String ano_str = anoTextField.getText();
        int ano = 0;
        if (!ano_str.isEmpty()) {
            ano = Integer.parseInt(ano_str);
        }

        //return new Filme(sequencial, titulo, genero, ano);
        Filme filme = null;
        int indice_aba_secionada = especializacao_filme_TabbedPane.getSelectedIndex();
        switch (indice_aba_secionada) {
            case 0:
                boolean oscarMelhorFilme = filme_companhia_cinematograficaPainel.isOscarMelhorFilme();
                String oscar_melhor_diretor = filme_companhia_cinematograficaPainel.getOscarMelhorDiretor();
                String oscar_melhor_ator = filme_companhia_cinematograficaPainel.getOscarMelhorAtor();
                String oscar_melhor_atriz = filme_companhia_cinematograficaPainel.getOscarMelhorAtriz();
                filme = new FilmeCompanhiaCinematografica(sequencial, titulo, genero, ano,
                        oscarMelhorFilme, oscar_melhor_diretor, oscar_melhor_ator, oscar_melhor_atriz);
                break;
            case 1:
                ProvedoraStreaming provedora_streaming
                        = filme_provedora_streamingPainel.getSelectedProvedoraStreaming();
                if (provedora_streaming == null) {
                    return null;
                }
                Producao producao = filme_provedora_streamingPainel.getSelectedProducao();
                if (producao == null) {
                    return null;
                }
                int total_episodios = filme_provedora_streamingPainel.getTotalEpisodios();
                if (total_episodios == -1) {
                    return null;
                }
                filme = new FilmeProvedoraStreaming(sequencial, titulo, genero, ano,
                        provedora_streaming, producao, total_episodios);
        }
        return filme;

    }

    private void informarSucesso(String mensagem) {
        JOptionPane.showMessageDialog(this, mensagem, "Informação", JOptionPane.INFORMATION_MESSAGE);
    }

    private void informarErro(String mensagem) {
        JOptionPane.showMessageDialog(this, mensagem, "Erro", JOptionPane.ERROR_MESSAGE);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JanelaCadastroFilmes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JanelaCadastroFilmes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JanelaCadastroFilmes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JanelaCadastroFilmes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new JanelaCadastroFilmes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton alterarButton;
    private javax.swing.JTextField anoTextField;
    private javax.swing.JButton consultarButton;
    private javax.swing.JTabbedPane especializacao_filme_TabbedPane;
    private javax.swing.JList filmes_cadastradosList;
    private javax.swing.JComboBox<String> generoComboBox;
    private javax.swing.JButton inserirButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton limparButton;
    private javax.swing.JButton removerButton;
    private javax.swing.JTextField sequencialTextField;
    private javax.swing.JTextField tituloTextField;
    // End of variables declaration//GEN-END:variables
}
